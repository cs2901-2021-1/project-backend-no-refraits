

# ===============================
# = DATA SOURCE
# ===============================
server.port=8080
# Database connection configuration

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1
#spring.datasource.initialization = always
#spring.jpa.generate-ddl = true

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
#spring.jpa.show-sql = true
#spring.jpa.hibernate.ddl-auto=create
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto = create
spring.jpa.properties.dialect = true


# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jackson.serialization.fail-on-empty-beans=false

proxy-target-class = true


#spring.datasource.url= jdbc:postgresql://127.0.0.1:5432/proyectosoftware
#spring.datasource.username=postgres
#spring.datasource.password=1234567
#server.error.include-message=always
#spring.jpa.hibernate.ddl-auto=update
#spring.mvc.servlet.load-on-startup=1

second.datasource.url=${UTEC_DB_URL}
second.datasource.username=${UTEC_DB_USERNAME}
second.datasource.password=${UTEC_DB_PASSWORD}
